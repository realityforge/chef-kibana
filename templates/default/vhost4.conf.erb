# Kibana Apache Virtual Host
#
# Generated by Chef

<% if !node['apache']['listen'].include?(node['kibana']['apache']['port'].to_s) %>
NameVirtualHost <%= node['kibana']['apache']['interface'] %>:<%= node['kibana']['apache']['port'] %>
<% end -%>
<VirtualHost <%= node['kibana']['apache']['interface'] %>:<%= node['kibana']['apache']['port'] %>>
  ServerName <%= node['kibana']['apache']['host'] %>
  ServerAlias <%= node['kibana']['apache']['host'] %>

  ProxyPass / <%= @kibana_service %>/
  ProxyPassReverse / <%= @kibana_service %>/
<% if node['kibana']['apache']['proxy'] %>

<% node['kibana']['elasticsearch']['hosts'].each do |ip| %>
  # Set global proxy timeouts
  <Proxy http://<%= ip %>:<%= @port %>>
    ProxySet connectiontimeout=5 timeout=90
  </Proxy>

  # Proxy for _aliases and .*/_search
  <LocationMatch "^(/_aliases|.*/_aliases|.*/_search|.*/_mapping|/_nodes)$">
    ProxyPassMatch http://<%= ip %>:<%= @port %>
    ProxyPassReverse http://<%= ip %>:<%= @port %>
  </LocationMatch>

  # Proxy for <%= @index %>/{dashboard,temp} stuff (if you don't want auth on /, then you will want these to be protected)
  <LocationMatch "^(/<%= @index %>/dashboard/|/<%= @index %>/temp).*$">
    ProxyPassMatch http://<%= ip %>:<%= @port %>
    ProxyPassReverse http://<%= ip %>:<%= @port %>
  </LocationMatch>
<% end %>
<% end %>

  <Location "/">
    <% if node['apache']['version'] == '2.4' %>
    Require all granted
    <% else %>
    Order allow,deny
    Allow from all
    <% end %>
<% if node['kibana']['apache']['basic_auth'] == 'on' %>
    AuthType basic
    AuthName "Kibana"
    AuthBasicProvider file
    AuthUserFile <%= node['apache']['dir'] %>/htpasswd
    require valid-user
<% end %>
  </Location>
</VirtualHost>
